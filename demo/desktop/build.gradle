/*******************************************************************************
 * Copyright 2019 metaphore
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.mainClassName = "com.crashinvaders.vfx.demo.desktop.DesktopLauncher"
ext.assetsDir = new File("../assets")

sourceSets.main.java.srcDirs = ['src/']
sourceSets.main.resources.srcDirs = ['resources/', project.assetsDir]

dependencies {
    runtime files('resources')
    implementation project(':demo:core')
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
}

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    
    if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
        jvmArgs += ['-XstartOnFirstThread']        
    }
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}
    from files(project.assetsDir);
 
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}
dist.dependsOn classes

task generateDtd(dependsOn: classes, type: JavaExec) {
    main = 'com.crashinvaders.vfx.demo.desktop.DtdSchemaGenerator'
    classpath = sourceSets.main.runtimeClasspath
    workingDir = project.rootDir
    ignoreExitValue = true
}

eclipse.project.name = appName + "-desktop"
